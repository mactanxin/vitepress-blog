import{_ as e,o as t,c as o,N as r}from"./chunks/framework.7e203a6d.js";const d=JSON.parse('{"title":"如何快速使用新分支覆盖老分支","description":"","frontmatter":{},"headers":[],"relativePath":"2020/git-merge-theirs.md"}'),a={name:"2020/git-merge-theirs.md"},i=r('<h1 id="如何快速使用新分支覆盖老分支" tabindex="-1">如何快速使用新分支覆盖老分支 <a class="header-anchor" href="#如何快速使用新分支覆盖老分支" aria-label="Permalink to &quot;如何快速使用新分支覆盖老分支&quot;">​</a></h1><p>来自<a href="https://stackoverflow.com/questions/10697463/resolve-git-merge-conflicts-in-favor-of-their-changes-during-a-pull/10697551" target="_blank" rel="noreferrer">stackoverflow</a>的问题:</p><blockquote><p>How do I resolve a git merge conflict in favor of pulled changes?</p></blockquote><blockquote><p>Basically I need to remove all conflicting changes from a working tree without having to go through all of the conflicts with a git mergetool while keeping all conflict-free changes. Preferably doing this while pulling, not afterwards.</p></blockquote><p>如何在pull代码的时候就从A分支合并所有的代码并且解决冲突合并到B分支</p><p><code>git pull -s recursive -X theirs origin develop_next</code></p>',6),l=[i];function c(n,s,h,g,p,_){return t(),o("div",null,l)}const u=e(a,[["render",c]]);export{d as __pageData,u as default};
